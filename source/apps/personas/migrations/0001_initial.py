# Generated by Django 2.2 on 2024-01-09 09:24

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Persona',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(code='invalid_alpha', message='Debe contener solo caracteres alfabéticos y espacios.', regex='^[A-Za-z\\s]+$')])),
                ('apellido', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(code='invalid_alpha', message='Debe contener solo caracteres alfabéticos y espacios.', regex='^[A-Za-z\\s]+$')])),
                ('username', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(code='invalid_alpha', message='Debe contener solo caracteres alfabéticos y espacios.', regex='^[A-Za-z\\s]+$')])),
                ('clave', models.CharField(max_length=50)),
                ('telefono', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(code='invalid_telefono', message='Ingrese un número de teléfono válido.', regex='^\\+?1?\\d{9,15}$')])),
                ('correo', models.EmailField(help_text='Ingrese un correo electrónico válido.', max_length=254)),
                ('es_empleado_publico', models.BooleanField(default=False)),
                ('es_cliente', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Rol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.PositiveSmallIntegerField()),
                ('persona', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles', to='personas.Persona')),
            ],
        ),
    ]
